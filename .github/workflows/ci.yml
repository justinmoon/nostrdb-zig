name: CI
on:
  push:
    branches: [ master, main, zig-flake-ci ]
  pull_request:
    branches: [ master, main ]

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: [self-hosted, nixos, hetzner]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive  # Important for nostrdb submodule

      - name: Run CI tests with Nix
        run: |
          nix run .#ci --impure --option sandbox false

      - name: Build project with Nix
        run: |
          nix build --impure --option sandbox false

      - name: Verify megalith CLI exists
        run: |
          # Check that the megalith binary was built
          if [ -f ./result/bin/megalith ]; then
            echo "âœ“ Megalith CLI binary found"
            ./result/bin/megalith --help || echo "Note: megalith may not have --help flag"
          else
            echo "Warning: Megalith CLI not found in result/bin/"
            ls -la ./result/ || echo "No result directory"
          fi

      - name: Auto-merge PR
        if: github.event_name == 'pull_request'
        run: |
          # Load PAT from local file on runner (fallback to secret if present)
          if [ -z "${GH_TOKEN:-}" ]; then
            export GH_TOKEN="$(grep -E '^(gh(p|s|u)p?_?|github_pat_)' ~/configs/secrets/github-pat.txt | head -n1 | tr -d '\r\n')"
          fi
          echo "Auto-merging PR #${{ github.event.pull_request.number }}"
          gh pr merge ${{ github.event.pull_request.number }} \
            --repo ${{ github.repository }} \
            --squash \
            --delete-branch

      - name: Create PR in configs repo
        if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
        run: |
          set -euo pipefail
          # Load PAT from local file on runner (fallback to secret if present)
          if [ -z "${GH_TOKEN:-}" ]; then
            export GH_TOKEN="$(grep -E '^(gh(p|s|u)p?_?|github_pat_)' ~/configs/secrets/github-pat.txt | head -n1 | tr -d '\r\n')"
          fi
          sha="${GITHUB_SHA}"
          echo "Creating PR in configs to bump nostrdb-zig to $sha"

          tmpdir="/tmp/configs-$$-${RANDOM}"
          git clone "https://x-access-token:${GH_TOKEN}@github.com/justinmoon/configs.git" "$tmpdir"
          cd "$tmpdir"

          git config user.name 'nostrdb-zig-bot'
          git config user.email 'bot@users.noreply.github.com'

          branch="bump-nostrdb-zig-${sha:0:7}"
          git checkout -b "$branch"

          # Check if nostrdb-zig input exists in flake.nix
          if ! grep -q "nostrdb-zig" flake.nix; then
            echo "Note: nostrdb-zig is not yet an input in configs/flake.nix"
            echo "You'll need to add it as an input first before the auto-bump will work"
            exit 0
          fi

          # Update flake.lock to point nostrdb-zig input to this commit
          nix flake lock \
            --override-input nostrdb-zig "github:justinmoon/nostrdb-zig/${sha}" \
            --update-input nostrdb-zig

          git add flake.lock
          git commit -m "bump: nostrdb-zig to ${sha:0:7}" || echo "No changes to commit"

          # Only push and open PR if there are changes
          if git diff --quiet origin/master..HEAD; then
            echo "No lockfile changes; skipping PR."
            exit 0
          fi

          git push -u origin "$branch"

          cat > /tmp/pr-body-$$.md << 'EOF'
          Automated PR to update nostrdb-zig to the latest commit.

          This PR was created by nostrdb-zig CI. After merge, the GitOps pipeline
          on Hetzner will rebuild and deploy via nixos-rebuild.
          
          Note: Ensure configs/flake.nix declares a `nostrdb-zig` input if you want
          automatic dependency updates.
          EOF

          gh pr create \
            --repo justinmoon/configs \
            --base master \
            --head "$branch" \
            --title "Bump nostrdb-zig to ${sha:0:7}" \
            --body-file /tmp/pr-body-$$.md